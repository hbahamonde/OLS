dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
summary(dist.normal)
# instalar librerias (OJO: podemos cargamos varias al mismo tiempo, si lo hacemos escribiendo un vector "c" ).
install.packages(c("rgeos", "cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
rnorm(12000, mean = 3, sd=1)
rnorm(25, mean = 3, sd=1)
rnorm(25, mean = 3, sd=1)
set.seed(123) # POR QUE ESTO?
rnorm(25, mean = 3, sd=1)
set.seed(123) # POR QUE ESTO?
rnorm(25, mean = 3, sd=1)
set.seed(0) # POR QUE ESTO?
rnorm(25, mean = 3, sd=1)
set.seed(0) # POR QUE ESTO?
rnorm(25, mean = 3, sd=1)
# ej 0
set.seed(0) # POR QUE ESTO?
plot(
rnorm(25, mean = 3, sd=1)
)
set.seed(0) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(0) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(0) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(0) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(0) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(10) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(10) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(10) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(10) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(10) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
set.seed(10) # POR QUE ESTO?
hist(
rnorm(25, mean = 3, sd=1)
)
distribucion.3 <- rnorm(12000, mean = 3, sd=1)
distribucion.1 <- rnorm(12000, mean = 1, sd=1)
head(distribucion.1)
set.seed(123) # POR QUE ESTO?
distribucion.3 <- rnorm(12000, mean = 3, sd=1)
distribucion.1 <- rnorm(12000, mean = 1, sd=1)
datosdensidad <- data.frame(distribucion.3,distribucion.1)
View(datosdensidad)
library(ggplot2)
ggplot(data = datosdensidad) +
geom_density(aes(x = distribucion.1, color = "red")) +
geom_density(aes(x = distribucion.3, color = "blue")) +
scale_colour_manual("Distribuciones",
values = c("Distribucion1"="green", "Distribucion3"="red"))
ggplot(data = datosdensidad) +
geom_density(aes(x = distribucion.1, color = "Distribucion1")) +
geom_density(aes(x = distribucion.3, color = "Distribucion3")) +
scale_colour_manual("Distribuciones",
values = c("Distribucion1"="green", "Distribucion3"="red"))
ggplot(data = datosdensidad) +
geom_density(aes(x = distribucion.1)) +
geom_density(aes(x = distribucion.3)) +
scale_colour_manual("Distribuciones",
values = c("Distribucion1"="green", "Distribucion3"="red"))
ggplot(data = datosdensidad) +
geom_density(aes(x = distribucion.1)) +
geom_density(aes(x = distribucion.3))
ggplot(data = datosdensidad) +
geom_density(aes(x = distribucion.1, color = "Distribucion1")) +
geom_density(aes(x = distribucion.3, color = "Distribucion3")) +
scale_colour_manual("Distribuciones",
values = c("Distribucion1"="green", "Distribucion3"="red"))
distribucion.3
log(datosdensidad$distribucion.1)
distribucion.1
log(datosdensidad$distribucion.1)
datosdensidad$distribucion.1 <- log(datosdensidad$distribucion.1) # NO, SIGUE CON PROBLEMAS.
datosdensidad$distribucion.3 <- log(datosdensidad$distribucion.3) # IDEM.
abs(datosdensidad$distribucion.1)
datosdensidad$distribucion.1
set.seed(123) # POR QUE ESTO?
distribucion.3 <- rnorm(12000, mean = 3, sd=1)
distribucion.1 <- rnorm(12000, mean = 1, sd=1)
abs(datosdensidad$distribucion.1)
log(datosdensidad$distribucion.1)
datosdensidad$distribucion.1
set.seed(123) # POR QUE ESTO?
distribucion.3 <- rnorm(12000, mean = 3, sd=1)
distribucion.1 <- rnorm(12000, mean = 1, sd=1)
View(distribucion.1)
# 5.2 Usando GGPLOT, haz un plot de densidad donde esten las dos distribuciones.
datosdensidad <- data.frame(distribucion.3,distribucion.1)
datosdensidad$distribucion.1
abs(datosdensidad$distribucion.1)
abs(0)
log(0)
log(datosdensidad$distribucion.1)
abs(-1)
log(0)
log(1)
distribucion.1 <- rnorm(12000, mean=1, sd=1)
distribucion.1
distribucion.1_CUADRADO = distribucion.1^2 # TRANSFORMACION MONOTONICA.
log(distribucion.1_CUADRADO)
??sci.pen
sci.pen(10000000)
data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
View(cuentas)
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
View(cuentas)
set.seed(123)
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
head(cuentas)
View(cuentas)
set.seed(123)
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
View(cuentas)
library(ggplot2)
ggplot(cuentas, aes(x = factor(cuentas$vector2), y = cuentas$vector1,  fill =factor(cuentas$vector2))) +
geom_col(width=1) +
scale_y_continuous() +  ## OJO AQUIIIIIIIIIII....???
scale_color_gradientn(colors = rainbow(5)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas, aes(x = factor(cuentas$vector2), y = cuentas$vector1,  fill =factor(cuentas$vector2))) +
geom_col(width=1) +
scale_color_gradientn(colors = rainbow(5)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
cuentas$vector2
is(cuentas$vector2)
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =factor(cuentas$vector2))) +
geom_col(width=1) +
scale_color_gradientn(colors = rainbow(5)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col(width=1) +
scale_color_gradientn(colors = rainbow(5)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col(width=0.3) +
scale_color_gradientn(colors = rainbow(5)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col() +
scale_color_gradientn(colors = rainbow(5)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col() +
#scale_color_gradientn(colors = rainbow(5)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col() +
scale_color_gradientn(colors = rainbow(10)) +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col() +
labs(title = "Cervezas preferidas por Estudiantes", x = "Cervezas", y = "Frecuencia")
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col()
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
library(ggplot2)
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col()
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
library(ggplot2)
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col()
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
library(ggplot2)
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col()
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
library(ggplot2)
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col()
cuentas <- data.frame(
vector1 = rpois(5, lambda = 5),
vector2 <- c("Becker","Heineken","Baltica","Escudo","Corona")
)
library(ggplot2)
ggplot(cuentas,
aes(x = cuentas$vector2, y = cuentas$vector1,  fill =cuentas$vector2)) +
geom_col()
# cargamos algunas de estas librerias
library("ggplot2")
theme_set(theme_bw()) # seteamos el tema "black and white" para no tener ese fondo plomo que siempre tiene GGPLOT. Se ve mejor, mas limpio.
library("sf")
library("rnaturalearth") # libreria con todos los mapas del mundo
library("rnaturalearthdata") # libreria complementaria de "rnaturalearth"
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(data = world) + geom_sf()
ggplot(data = world) + geom_sf(color = "black", fill = "lightgreen") # pero esta coloracion no aporta mucha informacion...
ggplot(data = world) + geom_sf(aes(fill = pop_est)) + scale_fill_viridis_c(option = "plasma", trans = "sqrt") # poblacion estimada.
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 12))
world_points<- st_centroid(world) # declaremos los nombres de los paises segun coordenadas.
world_points # veamos...
world_points <- cbind(world, st_coordinates(st_centroid(world$geometry))) # "column bind" (haciendo MERGE...nuestra base de datos con latitud/longitud, y otra base con "world_points", es decir, nombres de los paises)
# ahora ocupemos la misma base de datos para plotear Sudametica, pero con el nombre de los paises.
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 12)) + geom_text(data= world_points,aes(x=X, y=Y, label=name), color = "darkblue", fontface = "bold", check_overlap = FALSE)
dev.off()
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
dist.normal
set.seed(123)
dist.normal = rnorm(100, mean = 0, sd = 1)
hist(dist.normal)
?hist
hist(dist.normal, breaks=10)
hist(dist.normal, breaks=100)
hist(dist.normal, breaks=2)
hist(dist.normal, breaks=200)
library(LaplacesDemon)
install.packages("LaplacesDemon")
library(LaplacesDemon)
set.seed(123)
rbern(10, 0.5)
rbern(10, 0.9)
## Cuentas.
set.seed(123)
rpois(100, 10)
set.seed(123)
hist(
rpois(100, 10)
)
set.seed(123)
rexp(100)
hist(
rexp(100)
)
set.seed(123)
rlnorm(100, meanlog = 0, sdlog = 1)
set.seed(123)
plot(
density(
rlnorm(100, meanlog = 0, sdlog = 1)
)
)
set.seed(123)
rlogis(100)
cdf=function(x,mu,s){
k=(x-mu)/s
return(1/(1+exp(-k)))
}
x=seq(-10,13,0.01)
plot(x,cdf(x,-1,1),type="l")
set.seed(123)
rchisq(10000, 2)
set.seed(123)
plot(
density(
rchisq(10000, 2)
)
)
