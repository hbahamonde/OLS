if (!require("pacman")) install.packages("pacman"); library(pacman) # Ahora cargaremos "pacman"
p_load(cem) # y aqui le decimos a pacman que revise si tiene el paquete "cem" que utilizaremos para el sgte. ej.
data(LL)
LL
# Veamos en que consiste.
head(LL)
histogram(age)
histogram(LL$age)
hist(LL$age)
histogram(LL$age)
## Veamos ahora usando el comando "mean()"
mean(LL$age)
round(mean(LL$age), 0) # con 0 decimales.
# Calculemos la mediana
median(LL$age)
# Calculemos la mediana
length(LL$age)
# Calculemos la mediana
length(LL$age)/2
LL$age[,359:362]
LL$age[359:362,]
LL$age
LL$age[359,]
LL$age[,359]
LL$age
LL$age[]
LL$age[1,]
LL$age[1,1]
LL$age[,1]
LL$age[1]
LL$age[359:362]
# Calculemos la mediana
length(LL$age)/2
# Calculemos la mediana
length(LL$age)/2
LL$age[359:362]/2
LL$age[359:362]
LL$age[359:362]
median(LL$age)
# Calculemos la mediana
length(LL$age)/2
sort(LL$age)
## Mas complejo. Primero, ordenemos los numeros de mayor a menor.
ll.age.ordenado = sort(LL$age)
### OK. Los valores estan ordenados de menor a mayor. Segundo, veamos que largo tiene este vector (usando el comando "lenght", que significa "largo).
length(ll.age.ordenado)
length(ll.age.ordenado)/2 # OK. Ahora, veamos el elemento que vive al medio de esta lista de numeros.
ll.age.ordenado[361]
# Calculemos la mediana
median(LL$age)
## Comprobemos que nuestro calculo esta correcto.
median(LL$age) = ll.age.ordenado[361]
## Comprobemos que nuestro calculo esta correcto.
median(LL$age) == ll.age.ordenado[361]
round(mean(LL$age), 0) # con 0 decimales.
##  Conclusion preliminar # 1
round(mean(LL$age), 0) > median(LL$age)
summary(ll)
summary(LL)
summary(LL$age) # de la variable "age" ("edad")
# Por ej., cuantos estan casados ("married") en nuestra base de datos?
table(LL$married)
table(LL$married, LL$black)
?table
# Otro ejemplo, cuantos Afro-Americanos estan casados?
as.table(LL$married, LL$black)
# Otro ejemplo, cuantos Afro-Americanos estan casados?
is.table(LL$married, LL$black)
# Otro ejemplo, cuantos Afro-Americanos estan casados?
table(LL$married, LL$black)
table(LL$black)
# Ademas de ver cuan centrada esta nuestra distrubucion, tambien queremos ver
# cuando dispersas estan las observaciones del promedio.
var(LL$age)
sqrt(var(LL$age))
sd(LL$age)
# La DS es la raiz cuadrada ("square root", comando "sqrt") de la varianza, que esta en escala cuadrada.
sqrt(var(LL$age)) == sd(LL$age)
# Solucion: desviacion estandard.
sd(LL$age)
## redondear
round(sd(LL$age),0)
## 68% de los datos caen dentro del rango de +/- 1 DS  de la media. Es decir:
mean(LL$age) - round(sd(LL$age),0)
mean(LL$age) + round(sd(LL$age),0) # rango maximo
## 95% de los datos caen dentro del rango de +/- 2 DS's  de la media.
mean(LL$age) - 2(round(sd(LL$age),0)) # rango minimo
2(round(sd(LL$age),0))
## 95% de los datos caen dentro del rango de +/- 2 DS's  de la media.
mean(LL$age) - round(sd(LL$age),0)*2 # rango minimo
round(sd(LL$age),0)*2
mean(LL$age) + 2*(round(sd(LL$age),0)) # rango maximo
## 99.7% de los datos caen dentro del rango de +/- 3 DS's  de la media.
mean(LL$age) - 3*(round(sd(LL$age),0)) # rango minimo
mean(LL$age) + 3*(round(sd(LL$age),0)) # rango maximo
